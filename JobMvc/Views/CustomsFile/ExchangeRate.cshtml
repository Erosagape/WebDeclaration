 @{
    ViewBag.Header = "อัตราแลกเปลี่ยน";
}
    <h1>@ViewBag.Header</h1>
    <div id="MainForm">
        <table>
            <tr>
                <td>
                    <select id="selType" class="form-control dropdown" onchange="showGrid()">
                        <option value="I">Import</option>
                        <option value="E">Export</option>
                        <option value="F">Freight</option>
                    </select>
                </td>
                <td>
                    <input type="text" id="txtCurrency" class="form-control" disabled />
                </td>
                <td>
                    <input type="text" id="txtName" class="form-control" disabled />
                </td>
                <td>
                    <button id="btnSearch" class="btn btn-default" onclick="searchData()">Browse</button>
                </td>
                <td>
                    <button id="btnNew" class="btn btn-primary" onclick="newData()">Add New</button>
                </td>
            </tr>
        </table>
        <table id="tbl" class="table table-responsive">
            <thead>
                <tr>
                    <th>oid</th>
                    <th>seq</th>
                    <th>begindate</th>
                    <th>enddate</th>
                    <th>value</th>
                    <th>view</th>
                </tr>
            </thead>
        </table>
    </div>
    <div id="modalSearch" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"></button>
                    <h4 class="modal-title"><label id="lblHeader">Edit Data</label></h4>
                </div>
                <div class="modal-body">
                    <table id="tbLOV" class="table table-responsive">
                        <thead>
                            <tr>
                                <th>
                                <th>code</th>
                                <th>name</th>
                                <th>country</th>>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div id="modalEditor" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"></button>
                    <h4 class="modal-title"><label id="lblHeader">Edit Data</label></h4>
                </div>
                <div class="modal-body">
                    <input type="text" id="txtID" class="form-control" style="display:none" />
                    <table>
                        <tr class="row">
                            <td class="col-sm-3">Currency Code : </td>
                            <td class="col-sm-9">
                                <input type="text" id="txtCurrencyCode" class="form-control" disabled/>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-sm-3">
                                Begin Date :
                            </td>
                            <td class="col-sm-9">
                                <input type="date" id="txtDateBegin" class="form-control" />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-sm-3">
                                End Date :
                            </td>
                            <td class="col-sm-9">
                                <input type="date" id="txtDateEnd" class="form-control" />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-sm-3">
                                Value :
                            </td>
                            <td class="col-sm-9">
                                <input type="text" id="txtRateValue" class="form-control" />
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-sm-3">
                                Type :
                            </td>
                            <td class="col-sm-10">
                                <div class="radio">
                                    <label class="radio"><input type="radio" id="optTypeI" name="optType" value="I">Import</label>
                                    <label class="radio"><input type="radio" id="optTypeE" name="optType" value="E">Export</label>
                                    <label class="radio"><input type="radio" id="optTypeF" name="optType" value="F">Freight</label>
                                </div>
                            </td>
                        </tr>
                        <tr class="row">
                            <td class="col-sm-3">
                                Active :
                            </td>
                            <td class="col-sm-10">
                                <div>
                                    <input type="checkbox" id="chkStatus" class="checkbox" />
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button id="btnSave" class="btn btn-success" type="submit" value="submit" onclick="saveData()">Save</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        //กำหนดตัวแปรเก็บ path ของ web service ไว้ call ใน page นี้
        var path='@Url.Content("~")';
        var urlSource = path+ 'CustomsFile/getExchangeRate';
        var urlSave = path + 'CustomsFile/setExchangeRate';
        var urlCurrency = path + 'CustomsFile/getCurrency';
        //Event ตอนเปิดเพจมาให้ load grid เลย
        $(document).ready(function () {
            var cType = '@ViewBag.cType';
            var cCode = '@ViewBag.cCode';
            var cName = '@ViewBag.cName';
            if (cType != null) $('#selType').val(cType);
            if (cCode != null) $('#txtCurrency').val(cCode);
            if (cName != null) $('#txtName').val(cName);
            showGrid();
        });
        //ฟังก์ชั่นสำหรับ get ข้อมูลจาก web service มาแสดงผลใน table
        function showGrid() {
            var rowid = 0;
            var currency = $('#txtCurrency').val();
            var filter = '?type=' + $('#selType').val();
            filter += '&currencyCode=' + currency;

            //กำหนดค่า table grid
            $('#tbl').DataTable({
                ajax: {
                    url: urlSource + filter, //web service ที่จะ call ไปดึงข้อมูลมา
                    dataSrc: ''
                },
                selected: true, //ให้สามารถเลือกแถวได้
                columns: [ //กำหนด property ของ header column
			        { data: "oid", visible: false },
                    { data: null, title:"ลำดับที่" },
			        { data: null, title: "Begin" },
			        { data: null, title: "End" },
                    { data: null, title: "Exchange Rate" },
                    { data: null ,title:"แก้ไข" }
                ],
                "columnDefs": [ //กำหนด control เพิ่มเติมในแต่ละแถว
                    {
                        "targets": 1, //column ที่ 0 เป็นหมายเลขแถว
                        "data": null,
                        "render": function (data, type, full, meta) {
                            rowid++;
                            return rowid;
                        }
                    },
                    {
                        "targets":2,
                        "data": null,
                        "render": function (data, type, full, meta) {
                            var html = getDate(data.DateBegin);
                            return html;
                        }
                    },
                    {
                        "targets": 3,
                        "data": null,
                        "render": function (data, type, full, meta) {
                            var html =  getDate(data.DateEnd);
                            return html;
                        }
                    },
                    {
                        "targets": 4,
                        "data": null,
                        "render": function (data, type, full, meta) {
                            var html = parseFloat(data.RateValue).toPrecision(5);
                            return html;
                        }
                    },
                    {
                        "targets": 5,
                        "data": null,
                        "render": function (data, type, full, meta) {
                            var html = "<button id='btnEdit' class='btn btn-warning'>"+ data.CurrencyCode +"</button>";
                            return html;
                        }
                    }
                ],
                destroy: true //ให้ล้างข้อมูลใหม่ทุกครั้งที่ reload page
            });
            //เซ็ตค่า Event ให้ เวลาเลือกแถวให้แสดงสีแถวที่ถูกเลือก
            $('#tbl tbody').on('click', 'tr', function () {
                $('#tbl tbody tr.selected').removeClass('selected'); //ล้างทุก row ที่มีการ select ก่อน
                $(this).addClass('selected'); //select row ใหม่
            });
            //กำหนด Event ให้เวลากดปุ่ม Edit ให้แดสงข้อมูลใน popup form
            $('#tbl tbody').on('click', '#btnEdit', function () {
                var dt = getRowData('#tbl', this);
                loadData(dt);
            });
        }
        //function for convert date value to show in grid
        function getDate(val) {
            if (val !=null) {
                var date = new Date(parseInt(val.substr(6)));
                return formatDate(date);
            }
            return '';
        }
        function formatDate(date) {
            return date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)) + '-' + (date.getDate() <= 9 ? '0' + date.getDate() : date.getDate());
        }
        //ฟังก์ชั่นสำหรับ get ข้อมูลจาก row ปัจจุบัน ที่ user เลือกอยู่
        function getRowData(tb, e) {
            var indexRow = $(e).parents('tr');
            return $(tb).DataTable().row(indexRow).data();
        }
        //ฟังก์ชั่นสำหรับเรียก popup ให้แสดงผล หรือซ่อน popup ที่แสดงอยู่
        function showPopupEditor(caption, action) {
            $('#lblHeader').text(caption);
            $('#modalEditor').modal(action);
        }
        //ฟังก์ชั่นสำหรับล้างหน้าจอ Editor ของ popup สำหรับการเพิ่มข้อมูลใหม่
        function newData() {
            //เปลี่ยนค่า header หน้าจอ edit และแสดงผล
            if ($('#txtCurrency').val() == '') {
                bootbox.alert('Please select currency first');
                return;
            }
            var typeSelect =$('#selType').val();
            $('#optType' + typeSelect).prop('checked', true);
            $('#chkStatus').prop('checked', true);
            $('#txtID').val('0');
            $('#txtCurrencyCode').val($('#txtCurrency').val());
            $('#txtDateBegin').val('');
            $('#txtDateEnd').val('');
            $('#txtRateValue').val('0');
            var str = 'Add ' + $('#selType option:selected').text() + ' Rate: ' + $('#txtName').val();
            showPopupEditor(str, 'show');
        }
        //ฟังก์ชั่นสำหรับอ่านข้อมูลแล้วแสดงผลในหน้าจอ popup
        function loadData(data) {
            //เปลี่ยนค่า header ของหน้าจอ edit แล้วโชว์ popup form
            $('#txtID').val(data.oid);
            $('#txtCurrencyCode').val(data.CurrencyCode);
            $('#txtDateBegin').val(getDate(data.DateBegin));
            $('#txtDateEnd').val(getDate(data.DateEnd));
            $('#txtRateValue').val(parseFloat(data.RateValue).toPrecision(5));
            $('#optType' + data.RateType).prop('checked', true);
            $('#chkStatus').prop('checked', data.Status == 'Y' ? true : false);
            var str ='Edit ' + $('#selType option:selected').text() + ' Rate: ' + $('#txtName').val();
            showPopupEditor(str, 'show');
        }
		//ฟังก์ชั่นสำหรับอ่านข้อมูลในหน้าจอ popup แล้ว convert เป็น class
		function getEditorData() {
		    var obj = {
		        oid: $('#txtID').val(),
		        CurrencyCode: $('#txtCurrencyCode').val(),
		        CurrencyName: $('#txtName').val(),
		        DateBegin: $('#txtDateBegin').val(),
		        DateEnd: $('#txtDateEnd').val(),
		        RateType: $("input[name='optType']:checked").val(),
                RateValue: $('#txtRateValue').val(),
                Status: ($('#chkStatus').prop('checked') ? 'Y' : 'N'),
                LastUpdate:''
		    };
		    return obj;
		}
		function searchData() {
		    $('#tbLOV').DataTable({
		        ajax: {
		            url: urlCurrency, //web service ที่จะ call ไปดึงข้อมูลมา
		            dataSrc: ''
		        },
		        selected: true, //ให้สามารถเลือกแถวได้
		        columns: [ //กำหนด property ของ header column
                    { data: null ,title:"#"},
                    { data: "CurrencyCode", title: "สกุลเงิน" },
                    { data: "CurrencyName", title: "ชื่อ" },
                    { data: "CurrencyCode", title: "ชื่อประเทศ" }
		        ],
		        "columnDefs": [ //กำหนด control เพิ่มเติมในแต่ละแถว
                    {
                        "targets": 0, //column ที่ 0 เป็นหมายเลขแถว
                        "data": null,
                        "render": function (data, type, full, meta) {
                            var html = "<button class='btn btn-warning'>Select</button>";
                            return html;
                        }
                    }
		        ],
		        destroy: true //ให้ล้างข้อมูลใหม่ทุกครั้งที่ reload page
		    });
		    $('#tbLOV tbody').on('click', 'tr', function () {
		        $('#tbLOV tbody tr.selected').removeClass('selected'); //ล้างทุก row ที่มีการ select ก่อน
		        $(this).addClass('selected'); //select row ใหม่
		    });
		    $('#tbLOV tbody').on('click', 'button', function () {
		        var dt = getRowData('#tbLOV', this);
		        $('#txtCurrency').val(dt.CurrencyCode);
		        $('#txtName').val(dt.CurrencyName);

		        $('#modalSearch').modal('hide');
		        showGrid();
		    });
		    $('#modalSearch').modal('show');
		}
        //function for checked data before save
		function checkData(data) {
		    var msg = '';
		    if ($.isNumeric(data.RateValue) == false) {
		        msg += '<br/>Rate must be number';
		    }
		    if (data.RateValue == '0') {
		        msg += '<br/>Rate must greater than zero';
		    }
		    if (data.DateBegin == '') {
		        msg += '<br/>Begin Date must Entry';
		    }
		    if (data.DateEnd == '') {
		        msg += '</br>End Date must Entry';
		    }
		    if (data.DateBegin > data.DateEnd) {
		        msg += '<br/>Date begin cannot less than Date End';
		    }
		    return msg;
		}
        //ฟังก์ชั่นสำหรับ post ข้อมูลไปยัง web service เพื่อ save
		function _saveData() {
		    bootbox.alert(JSON.stringify(getEditorData()));
		}
		function saveData(){
		    var data = getEditorData();
		    var chk = checkData(data);
		    if (chk != '') {
		        bootbox.alert(chk);
		        return;
		    }
			$.post(urlSave,data)
				.done(function (response) {
                    //ซ่อน popup form แล้ว load grid
				    showPopupEditor('', 'hide');
					showGrid();
					bootbox.alert(response);
			});
		}
    </script>
